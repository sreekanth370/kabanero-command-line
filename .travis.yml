language: go
arch:
  - amd64
  - ppc64le
go:
  - 1.12.x

go_import_path: github.com/kabanero-io/kabanero-command-line

services:
  - docker

# skip the default language's install and script steps, we implement job stages instead
install: skip
script: skip

stages:
  - name: lint
  - name: test
  - name: deploy
    if: tag IS present

install-win-req: &install-win-req
  install:
      - if [ "$TRAVIS_OS_NAME" = "windows" ]; then choco install make; fi
      
test-template: &test-template
  <<: *install-win-req
  stage: test
  script: make test

standard-deploy-template: &standard-deploy-template
  stage: deploy
  os: linux
  script:
    - make ARCH=$ARCH VERSION=${TRAVIS_TAG}  $PACKAGE
    - make deploy
  deploy:
    provider: releases
    skip_cleanup: true
    api_key: "$GITHUB_OAUTH_TOKEN"
    file: package/*
    file_glob: true
    on:
      branch: master
      tags: true

jobs:
  include:
    - name: Lint
      stage: lint
      os: linux
      script: make lint
    - <<: *test-template
      name: Full Test on Linux
      os: linux
    - <<: *test-template
      name: Unit Test on MacOS
      os: osx
      env:
        - CGO_ENABLED=1
      # script: make unittest
    - <<: *test-template
      name: Unit Test on Windows
      os: windows
      # script: make unittest
    - name: Deploy Release osx
      stage: deploy
      os: osx
      env:
        - CGO_ENABLED=1
      script:
        - make VERSION=${TRAVIS_TAG}  package-osx
        - make deploy
      before_deploy:
        - mv package/kabanero-${TRAVIS_TAG}-darwin-amd64.tar "package/kabanero-${TRAVIS_TAG}-macos-amd64.tar"
        - mv package/kabanero-${TRAVIS_TAG}-darwin-amd64.tar.gz "package/kabanero-${TRAVIS_TAG}-homebrew-amd64.tar.gz"
      deploy:
        provider: releases
        skip_cleanup: true
        api_key: "$GITHUB_OAUTH_TOKEN"
        file: package/*
        file_glob: true
        on:
          branch: master
          tags: true
    - <<: *standard-deploy-template
      name: Deploy Release win/linux
      env:
        - ARCH=amd64
        - PACKAGE=package-win-and-linux
    - <<: *standard-deploy-template
      name: Deploy Release P  
      arch: ppc64le
      env:
        - ARCH=ppc64le
        - PACKAGE=package-pz
    - <<: *standard-deploy-template
      name: Deploy Release Z 
      arch: s390x
      env:
        - ARCH=s390x
        - PACKAGE=package-pz
